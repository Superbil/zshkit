# Themable prompt with git support. 
# 	No twiddly crap - just prompty goodness.
#   Requires zshkit: http://github.com/mattfoster/zshkit/tree/master/06_git
# 
# Instructions:
# 1) Put this somewhere
# 2) Make sure that it's in the fpath:
#	fpath=( $HOME/.zsh/func "$fpath[@]" )
# 3) Load up the prompt theme extension, and set the prompt:
#	autoload promptinit && promptinit && prompt git

# Prompt setup function
function prompt_git_setup {
  
  unset PS1 PS2 PS3 PS4 PROMPT RPROMPT
  
  # Colours accepted as arguments
  d_col=${3:-'blue'}
  n_tru=${4:-'blue'}
  n_fal=${5:-'red'}
  # I've no idea why the %F style colours don't work whhen SHLVL == 1
  if [[ $SHLVL == 1 ]]; then
    PS1='$fg_bold[$d_col]%1~ $fg_bold[yellow]${vcs_info_msg_0_}%(?.$fg_bold[$n_tru].$fg[$n_fal])$ $reset_color'
    PS2='%_ $fg_bold{$d_col}-> %reset_color'  
  else  
    PS1='%B%F{$d_col}%1~ %F{yellow}${vcs_info_msg_0_}%(?.%F{$n_tru}.%F{$n_fal})$ %F{white}'
    PS2='%_ %B%F{$d_col}-> %F{white}'
  fi
}

# print information when user runs 'prompt -h git'
prompt_git_help () {
cat <<EOH
  Git prompt: displays git status right in your prompt.
  The current branch will be shown coloured 
  * magenta: if dirty.
  * cyan: if clean

  This prompt is color-scheme-able. You can invoke it thus:

  prompt git [colour1 [colour2 [colour3 [colour4 [colour5]]]]] 

  Colours correspond to username, hostname, working dir, and \$ sign
  for true 'exit' status and false 'exit' status.  Defaults are 
  green green blue blue yellow - all bold. For best visual
  effect, switch off bold chars in your terminal.  
EOH
}

prompt_git_setup "$@"
